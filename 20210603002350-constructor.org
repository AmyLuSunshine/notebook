:PROPERTIES:
:ID:       80da4719-f62a-442d-9bfa-79b380c56f1e
:END:
#+title: Constructor
#+filetags: :Javascript:

- tags :: [[id:98730b92-6677-4ef0-bf88-3c8cf7a33504][Javascript]], [[id:a6917226-1993-44ca-8612-43dc0849da68][Objects]]

* What's Constructor

A function creates and initializes objects. Constructor works with the keyword new. For example: 

#+begin_src js
// Constructor
function user(name, email) {
  this.name = name;
  this.email = email;
}
const sz = new user("sz", "sunzhe1996@gmail.com");
console.log(sz);
#+end_src

** Builtin Constructors

| Constructor | Literal Expression   | Constructor Syntax |
|-------------+----------------------+--------------------|
| Object      | {...}                | new Object()       |
| Array       | [...]                | new Array()        |
| Function    | function (...) {...} | new Function (...) |
| RegExp      | /.../...             | new RegExp(...)    |
| Date        | none                 | new Date(...)      |

* Create object with constructor

1. Define a function F without return statement.
2. Set the prototype property: F.prototype = parentX
3. Create the object. (const obj = new F)

What *new F()* returns depends on whether F returns an object.

#+begin_src js
const F = function () {
  this.age = 25;
};

const user = {
  "name": "zhe",
  "birYear": 1996,
};

//optional
//F.prototype = user;

const sz = new F();
console.log(sz);
#+end_src

* Convention

the names of constructor start with capital letter.
