:PROPERTIES:
:ID:       a69f8db4-5505-4e14-99bf-a3ec6cadf952
:END:
#+title: Context
#+filetags: :Golang:

- tag :: [[id:5b9263ba-57ab-487c-bde1-970cda17283c][Golang]]

A context is treated as an immutable instance. Everytime we add information to a context, we wrap the existing context with a child context.

#+begin_src go
func main() {
	ctx, cancel := context.WithTimeout(context.Background(), time.Millisecond*1000)

	ch := make(chan int)
	go func(ctx context.Context) {
		i := 0
		for {
			select {
			case <-ctx.Done():
				fmt.Println("done")
				return
			default:
				ch <- i
				i++
			}
		}

	}(ctx)

	go func() {
		for i := range ch {
			fmt.Println(i)
			if i == 1000000 {
				cancel()
			}
		}
	}()

	select {}
}
#+end_src
