:PROPERTIES:
:ID:       964a0c78-7bb0-47f9-8e76-6bcead9b5938
:END:
#+title: Packages
#+filetags: :Golang:

 - tags :: [[id:5b9263ba-57ab-487c-bde1-970cda17283c][Golang]]


* import packages

import path: path/to/directory_of_the_package

package usage: packageName.ExportedFunction()

the directory name does not need to be the same as the pacakge name. When importing a package, you have to specify the directory name instead of pacakge name. When calling a expoted function in a specific pacakge, you have to use the package name.
 
** import pacakge with customized name

#+begin_src go
import f "fmt"

func main() {
  f.Println("hello world")
}
#+end_src

** call function in package without pacakge name

#+begin_src go
import . "fmt" 
Println("hello world")
#+end_src

* Naming convention

packge is named in one single word in lowercase without underscores or mixedCaps.

* User-defined type in go package

 #+begin_src go
   package name

      type name struct{
	   first string
	   second string
      }
 #+end_src

 ** exported to other package

go allows you export type from a package to another. To do this, you should capitalize the first letter of the type and its fields.

#+begin_src go
  package name

  type Name struct {
  // the first letters of the name of the fields should also be capitalized
	First string  
	Second string
  }
#+end_src


