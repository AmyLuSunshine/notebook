:PROPERTIES:
:ID:       d2ecb0ce-d53b-4ba7-8cb7-70b1a7266105
:END:
#+title: Asymptotic Analysis
#+filetags: :algorithms:

- tags :: [[id:8ba0e58d-5ef6-47b3-b04a-1bb3001b2970][Algorithms]], [[id:0644d355-d774-414b-b674-4f794fcdec7e][Big O]]

  Asymptotic analysis is a way to analyze how fast a program's runtime growth.

* key points

** imagine the size of your input grows towards infinity

** compare the growth of the input size and the growth of program's runtime

* Big O

The big O notation describes the "worst case" running time of an algorithm.

if an algorithm's running time is Ω(g(n)), it means no matter what input size n is chose for each, the running time of that input is _at most_ a constant times g(n).

* Big Ω

The big Ω notation describes the "best case" running time of an algorithm.

if an algorithm's running time is Ω(g(n)), it means no matter what input size n is chose for each, the running time of that input is _at least_ a constant times g(n).


* Big Θ

The big Θ notation is employed when the big O and the big Ω of a program's runtime is the same.

* Runtime comparison

  $$\log_{}n<\sqrt{n}<n<nlog{n}<n^{2}<2^n}$$



