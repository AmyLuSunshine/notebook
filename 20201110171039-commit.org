:PROPERTIES:
:ID:       a2923fa0-082a-4c76-b720-1075b8ab71cf
:END:
#+title: Commit 
#+filetags: :Git:

- tags :: [[id:3226a270-adaf-4c39-8f9b-1ead217c8049][Git]]

* Search content

** Keyword in commit message

#+begin_src git
git log --grep="message"
#+end_src

** Keyword in the file modified by a commit

#+begin_src git
git log -S "message"
#+end_src

** Commits related to a specific file

#+begin_src 
git log file_name
#+end_src

*** Show what changes made by commits

#+begin_src 
git log -p file_name
#+end_src


** find author of a specific commit
#+begin_src 
git blame file
#+end_src


* Modify the most current commit

** modify the commit message

#+begin_src 
git commit --amend -m "new commit message"
#+end_src

** add new files/modification in the most current commit

#+begin_src 
git add files/modification 
git commit --amend
#+end_src


* Move around between each commit (git reset)
** There are 3 options for git reset

#+begin_src 
git reset --mixed # defualt setting: remove files from staging area
git reset --soft  # move files from commited area to staging area
git reset --hard  # 
#+end_src

** Go one step back
#+begin_src 
git reset master^ #you can also use (SHA-1) instead of master
#+end_src
** Go two step back
#+begin_src 
git reset master^^
#+end_src

#+begin_src 
git reset master~2
#+end_src
** reset reset (go to the commit that has been reset)
*** find sha-1 of the commit
#+begin_src 
git reflog
#+end_src
*** reset to that commit's state
#+begin_src 
git reset sha-1
#+end_src

* Commit a part of a file
#+begin_src 
git add -p file # then enter e
#+end_src

